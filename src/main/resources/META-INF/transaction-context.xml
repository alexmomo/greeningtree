<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"    
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"     
    xmlns:aop="http://www.springframework.org/schema/aop"    
    xmlns:tx="http://www.springframework.org/schema/tx"    
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:jee="http://www.springframework.org/schema/jee"   
    xsi:schemaLocation="     
          http://www.springframework.org/schema/beans     
          http://www.springframework.org/schema/beans/spring-beans-3.2.xsd     
          http://www.springframework.org/schema/tx     
          http://www.springframework.org/schema/tx/spring-tx-3.2.xsd    
          http://www.springframework.org/schema/jee     
          http://www.springframework.org/schema/jee/spring-jee-3.2.xsd 
          http://www.springframework.org/schema/context     
          http://www.springframework.org/schema/context/spring-context-3.2.xsd     
          http://www.springframework.org/schema/aop     
          http://www.springframework.org/schema/aop/spring-aop-3.2.xsd" default-autowire="byName">
    <bean id="memcachedClient"
          class="net.spy.memcached.spring.MemcachedClientFactoryBean">
        <property name="servers" value="127.0.0.1:11211"/>
        <property name="protocol" value="BINARY"/>
        <property name="transcoder">
            <bean
                    class="net.spy.memcached.transcoders.SerializingTranscoder">
                <property name="compressionThreshold" value="1024"/>
            </bean>
        </property>
        <property name="opTimeout" value="10"/>
        <property name="timeoutExceptionThreshold" value="1998"/>
        <!--<property name="hashAlg" value="KETAMA_HASH"/>-->
        <property name="locatorType" value="CONSISTENT"/>
        <property name="failureMode" value="Redistribute"/>
        <property name="useNagleAlgorithm" value="false"/>
    </bean>
    <!-- 定义事务处理类,不同的数据访问方式,事务处理类不同  
	    比如：Hibernate操作的使用HibernateTransactionManager,JDBC操作的使用DataSourceTransactionManager  
	 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>  
    </bean> 
    
    <!-- 配置事务的传播特性 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
		<tx:method name="insert*" propagation="REQUIRED"/>
		<tx:method name="delete*" propagation="REQUIRED"/>
		<tx:method name="update*" propagation="REQUIRED"/>
		<tx:method name="save*" propagation="REQUIRED"/>
		<tx:method name="validate*" read-only="true"/>		
		<tx:method name="get*" read-only="true"/>
		<tx:method name="find*" read-only="true"/>
		<tx:method name="is*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	

	<!-- 那些类的哪些方法参与事务 -->
	<aop:config>
		<aop:pointcut id="comDaoMethod" expression="execution(* com.greeningtree.dao.impl.*.*.*(..)) || execution(* com.greeningtree.dao.impl.*.*.*.*(..))"/>
		<aop:advisor pointcut-ref="comDaoMethod" advice-ref="txAdvice"/>
	</aop:config> 
    
</beans>